# -*- coding: utf-8 -*-
# @Author: jpch89
# @Time:   18-9-3 上午11:21

"""
判断一个 9x9 的数独是否有效。只需要根据以下规则，验证已经填入的数字是否有效即可。

    数字 1-9 在每一行只能出现一次。
    数字 1-9 在每一列只能出现一次。
    数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。

说明:
    一个有效的数独（部分已被填充）不一定是可解的。
    只需要根据以上规则，验证已经填入的数字是否有效即可。
    给定数独序列只包含数字 1-9 和字符 '.' 。
    给定数独永远是 9x9 形式的。
"""


class Solution:
    def isValidSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: bool
        """

        # 每行
        for row in board:
            tmp = []
            for column in row:
                if column == '.':
                    continue
                else:
                    tmp.append(column)
            if len(tmp) != len(set(tmp)):
                return False

        # 每列
        for column in range(9):
            tmp = []
            for row in range(9):
                if board[row][column] == '.':
                    continue
                else:
                    tmp.append(board[row][column])
            if len(tmp) != len(set(tmp)):
                return False

        # 每 3*3
        for p in range(9):
            quotient, remainder = divmod(p, 3)
            m = quotient * 3
            n = remainder * 3
            tmp = []
            for i in range(3):
                for j in range(3):
                    if board[m + i][n + j] == '.':
                        continue
                    else:
                        tmp.append(board[m + i][n + j])
            if len(tmp) != len(set(tmp)):
                return False

        return True


if __name__ == '__main__':
    # board = [
    #     ["5","3",".",".","7",".",".",".","."],
    #     ["6",".",".","1","9","5",".",".","."],
    #     [".","9","8",".",".",".",".","6","."],
    #     ["8",".",".",".","6",".",".",".","3"],
    #     ["4",".",".","8",".","3",".",".","1"],
    #     ["7",".",".",".","2",".",".",".","6"],
    #     [".","6",".",".",".",".","2","8","."],
    #     [".",".",".","4","1","9",".",".","5"],
    #     [".",".",".",".","8",".",".","7","9"]
    # ]

    # board = [
    #     ["8","3",".",".","7",".",".",".","."],
    #     ["6",".",".","1","9","5",".",".","."],
    #     [".","9","8",".",".",".",".","6","."],
    #     ["8",".",".",".","6",".",".",".","3"],
    #     ["4",".",".","8",".","3",".",".","1"],
    #     ["7",".",".",".","2",".",".",".","6"],
    #     [".","6",".",".",".",".","2","8","."],
    #     [".",".",".","4","1","9",".",".","5"],
    #     [".",".",".",".","8",".",".","7","9"]
    # ]

    # 预期： False
    board = [
        [".", ".", ".", ".", ".", ".", "5", ".", "."],
        [".", ".", ".", ".", ".", ".", ".", ".", "."],
        [".", ".", ".", ".", ".", ".", ".", ".", "3"],
        [".", "2", ".", "7", ".", ".", ".", ".", "."],
        ["8", "3", "6", "5", ".", ".", ".", ".", "1"],
        [".", ".", ".", ".", ".", "1", ".", ".", "."],
        ["2", ".", ".", ".", ".", ".", ".", ".", "5"],
        [".", ".", ".", ".", ".", ".", ".", ".", "7"],
        [".", ".", ".", "4", ".", ".", ".", "7", "."]
    ]

    print(Solution().isValidSudoku(board))
